{
	"id": "9d835673-13f6-dde1-ec99-9c5eda5be129",
	"name": "Test Elect.io API",
	"description": "Tests the elect.io API",
	"order": [
		"2b8c1bce-7aa4-a642-cda2-c46a734fc0c9"
	],
	"folders": [
		{
			"id": "c72b2b68-9692-aa77-4893-d9a282047097",
			"name": "1RunFirst",
			"description": "",
			"order": [
				"7580ec68-a417-0125-6935-0715a3b7c185"
			],
			"owner": "443657",
			"collectionId": "9d835673-13f6-dde1-ec99-9c5eda5be129"
		},
		{
			"id": "6e0dd07d-9d10-1cf3-5e92-0fcc86cb292d",
			"name": "Beta",
			"description": "",
			"order": [],
			"owner": "443657"
		},
		{
			"id": "71c9b014-61aa-148f-34fb-e34178490865",
			"name": "Candidates",
			"description": "",
			"order": [
				"f36c493f-7fd5-186b-f131-e7cdfe9561ee",
				"af140b77-b1e3-947f-92cc-a89d92991f4a",
				"37e9e5e1-0b03-4de1-8a6a-6718c4c3f640",
				"e0153d09-ff23-844d-3e15-ae46dc74a20e"
			],
			"owner": "443657"
		},
		{
			"id": "d6deff1b-260d-114d-8771-4674af08293c",
			"name": "Chat",
			"description": "",
			"order": [
				"6c1ba8a1-9140-436e-8798-fc6c8a77178b",
				"4eac7ccd-4908-c101-7ebb-652598bc553d",
				"8f8ba44f-af27-d479-cb84-df06d04027a9",
				"10c5cd18-4676-1124-3be8-baff6a6940d0"
			],
			"owner": "443657"
		},
		{
			"id": "a141dc98-5571-ccd9-43fc-221ec99fed33",
			"name": "Events",
			"description": "",
			"order": [
				"e8004e92-4701-943a-51fa-113d793bebf8",
				"b8b6afc1-0982-67df-af25-3b96b0dedecf"
			],
			"owner": "443657"
		},
		{
			"id": "f903ade0-441f-1bab-4edc-d67d5c640616",
			"name": "Parties",
			"description": "",
			"order": [
				"68fdb2fa-e647-f63f-aeb7-cf4061b731df"
			],
			"owner": "443657"
		},
		{
			"id": "73df4bc8-4427-634a-7e88-72d0871fabf8",
			"name": "User Creation and Deletion",
			"description": "",
			"order": [
				"17c4cda4-5326-dca1-48c6-1fc7525ef239",
				"ef7d56cc-c988-9978-6fda-f8a5c2802b8b",
				"3091b7a0-74c6-c197-7c21-2278a68a9431",
				"4720f823-630b-7c30-5e35-cc794e9ff9db",
				"56c52355-5322-c2b5-b5df-a8a9a48500e1",
				"226fb2c1-4763-a7c5-bb75-531a186a09c4",
				"27857bf1-2146-51cf-a8d1-9de785e728c2"
			],
			"owner": "443657",
			"collectionId": "9d835673-13f6-dde1-ec99-9c5eda5be129"
		},
		{
			"id": "1971d5d7-4be0-42c2-d30b-849c7bf46049",
			"name": "User Data",
			"description": "",
			"order": [
				"ca050838-22ec-bd68-106c-8dc6d8ef2f2e",
				"57c18544-77cd-541d-492f-ccfb6eb07417",
				"cf5f3438-53da-4e96-107d-1e660e364c41",
				"da5de36c-903c-471d-1b7a-ee0f205b37ac",
				"82e076fb-9f4c-70de-a34c-56e8c7d95f3f",
				"417b3f1e-cd79-f212-5567-d5e11998bd05",
				"99d20753-6fd0-a5f2-50b5-3a2ef1f344e5",
				"984d4b85-fb23-9137-1b04-a1425f38d05f",
				"0e905bd8-7c07-c5df-9676-5bc87ea88d9d",
				"551947dd-8b26-9084-5b6b-f0519a83bb68",
				"7ef21d56-17a2-45dc-3daa-14d954e1278f",
				"8285760b-571f-dac7-da3d-9235c0088c34",
				"e153c425-112c-46c4-77fc-c26be0dec931"
			],
			"owner": "443657",
			"collectionId": "9d835673-13f6-dde1-ec99-9c5eda5be129"
		},
		{
			"id": "926e2238-aedd-4827-a517-8bdfa91ebba3",
			"name": "Weekly Snapshots",
			"description": "",
			"order": [
				"97a206a5-70dc-7c02-e8ec-845c1e09ad57"
			],
			"owner": "443657"
		}
	],
	"timestamp": 1459876863569,
	"owner": "443657",
	"remoteLink": "https://www.getpostman.com/collections/79087dd86e2a74a567d3",
	"public": false,
	"requests": [
		{
			"id": "0e905bd8-7c07-c5df-9676-5bc87ea88d9d",
			"headers": "",
			"url": "{{url}}/users/000000000000000000000001/emailsettings",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"tests": "//Verify response arrives in less than a second\ntests[\"Response time is less than 1 second\"] = responseTime < 1000;\n\n//Test response code\ntests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460392093751,
			"name": "/users/:userid/emailsettings (unauthorized)",
			"description": "",
			"collectionId": "9d835673-13f6-dde1-ec99-9c5eda5be129",
			"responses": []
		},
		{
			"id": "10c5cd18-4676-1124-3be8-baff6a6940d0",
			"headers": "Content-Type: application/json\n",
			"url": "{{url}}/chat/000000000000000000000001/messages",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"tests": "//Verify response arrives in less than a second\ntests[\"Response time is less than 1 second\"] = responseTime < 1000;\n\n//Test response code\ntests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;\n\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1461038835335,
			"name": "/chat/:chatId/messages (Unauthorized)",
			"description": "",
			"collectionId": "9d835673-13f6-dde1-ec99-9c5eda5be129",
			"responses": [],
			"rawModeData": "{\n    \"author\": \"000000000000000000000004\",\n    \"contents\": \"This is a test message from postman.\"\n}"
		},
		{
			"id": "17c4cda4-5326-dca1-48c6-1fc7525ef239",
			"headers": "Content-Type: application/json\n",
			"url": "{{url}}/users/newuser",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"tests": "//Verify response arrives in less than a second\ntests[\"Response time is less than 1 second\"] = responseTime < 1000;\n\n//Test response code\ntests[\"Status code is 201: Created\"] = responseCode.code === 201;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1461041370741,
			"name": "POST New User",
			"description": "",
			"collectionId": "9d835673-13f6-dde1-ec99-9c5eda5be129",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"2117532m@student.gla.ac.uk\",\n    \"password\": \"mycatismax\",\n    \"fullName\": \"Andrew McCluskey\",\n    \"location\": \"Glasgow, Scotland\"\n}\n"
		},
		{
			"id": "226fb2c1-4763-a7c5-bb75-531a186a09c4",
			"headers": "Content-Type: application/json\nAuthorization: Bearer eyJpZCI6IjEyMzQ1Njc4OTAxMjM0NTY3ODkwMTIzNCJ9\n",
			"url": "{{url}}/users/123456789012345678901234",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "raw",
			"tests": "//Verify response arrives in less than a second\ntests[\"Response time is less than 1 second\"] = responseTime < 1000;\n\n//Test response code\ntests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460666361105,
			"name": "DELETE Non-Existent User",
			"description": "",
			"collectionId": "9d835673-13f6-dde1-ec99-9c5eda5be129",
			"responses": [],
			"rawModeData": ""
		},
		{
			"id": "27857bf1-2146-51cf-a8d1-9de785e728c2",
			"headers": "Content-Type: application/json\nAuthorization: bearer eyJpZCI6IjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwNCJ9\n",
			"url": "{{url}}/users/000000000000000000000004",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "raw",
			"tests": "//Verify response arrives in less than a second\ntests[\"Response time is less than 1 second\"] = responseTime < 1000;\n\n//Test response code\ntests[\"Status code is 200: OK\"] = responseCode.code === 200;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1461021418436,
			"name": "DELETE User",
			"description": "",
			"collectionId": "9d835673-13f6-dde1-ec99-9c5eda5be129",
			"responses": [],
			"rawModeData": ""
		},
		{
			"id": "2b8c1bce-7aa4-a642-cda2-c46a734fc0c9",
			"headers": "",
			"url": "{{url}}/resetdb",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": null,
			"dataMode": "params",
			"tests": "//Verify response arrives in less than a second\ntests[\"Response time is less than 1 second\"] = responseTime < 1000;\n\n//Test response code\ntests[\"Status code is 200\"] = responseCode.code === 200;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460388926241,
			"name": "Reset DB",
			"description": "",
			"collectionId": "9d835673-13f6-dde1-ec99-9c5eda5be129",
			"responses": []
		},
		{
			"id": "3091b7a0-74c6-c197-7c21-2278a68a9431",
			"headers": "Content-Type: application/json\n",
			"url": "{{url}}/users/newuser",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"tests": "//Verify response arrives in less than a second\ntests[\"Response time is less than 1 second\"] = responseTime < 1000;\n\n//Test response code\ntests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460654302705,
			"name": "POST Invalid Email",
			"description": "",
			"collectionId": "9d835673-13f6-dde1-ec99-9c5eda5be129",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"2117532mstudent.gla.ac.uk\",\n    \"password\": \"mycatismax\",\n    \"fullName\": \"Andrew McCluskey\",\n    \"location\": \"Glasgow, Scotland\"\n}"
		},
		{
			"id": "37e9e5e1-0b03-4de1-8a6a-6718c4c3f640",
			"headers": "",
			"url": "{{url}}/candidates/independent",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"tests": "//Verify response arrives in less than a second\ntests[\"Response time is less than 1 second\"] = responseTime < 1000;\n\n//Test response code\ntests[\"Status code is 200\"] = responseCode.code === 200;\n\n//Verify JSON keys\nvar schema = {\n\"type\": \"object\",\n\"properties\": {\n\"_id\": \"integer\",\n\"headImage\": \"string\",\n\"logoImage\": \"string\",\n\"fullName\": \"string\",\n\"party\": \"integer\",\n\"cssType\": \"string\",\n\"description\": \"string\",\n\"twitterHashtag\": \"string\",\n\"twitterID\": \"string\",\n\"campaignWebsite\": \"string\",\n\"wikipedia\" : \"string\",\n\"age\": \"string\",\n\"quote\": \"string\"\n},\n\"required\": [\"_id\", \"headImage\", \"logoImage\", \"fullName\", \"party\", \"cssType\", \"description\", \"twitterHashtag\", \"twitterID\", \"campaignWebsite\", \"wikipedia\", \"age\", \"quote\"]\n};\n \nvar data = JSON.parse(responseBody);\n \nresult = tv4.validateResult(data[0], schema)\ntests[\"Valid JSON\"] = result.valid;",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1459957486702,
			"name": "/candidates/independent",
			"description": "",
			"collectionId": "9d835673-13f6-dde1-ec99-9c5eda5be129",
			"responses": [],
			"folder": "71c9b014-61aa-148f-34fb-e34178490865",
			"timestamp": null
		},
		{
			"id": "417b3f1e-cd79-f212-5567-d5e11998bd05",
			"headers": "Authorization: bearer eyJpZCI6IjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMSJ9\nContent-Type: application/json\n",
			"url": "{{url}}/users/000000000000000000000001",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"tests": "//Verify response arrives in less than a second\ntests[\"Response time is less than 1 second\"] = responseTime < 1000;\n\n//Test response code\ntests[\"Status code is 200\"] = responseCode.code === 200;\n\n//Verify JSON keys\nvar schema = {\n\"type\": \"object\",\n\"properties\": {\n    \"_id\": \"integer\",\n    \"email\": \"string\",\n    \"password\": \"string\",\n    \"fullName\": \"string\",\n    \"gender\": \"string\",\n    \"hispanic\": \"boolean\",\n    \"registered\": \"boolean\",\n    \"age\": \" string\",\n    \"politicalAffiliation\": \"integer\",\n    \"location\": \"string\",\n    \"vote\": \"integer\",\n    \"emailSettings\": \"array\"\n},\n\"required\": [\"_id\", \"email\", \"password\", \"fullName\", \"gender\", \"hispanic\", \"registered\", \"age\", \"politicalAffiliation\", \"location\", \"vote\", \"emailSettings\"]\n};\n \nif (responseBody === \"\"){\n    tests[\"Valid JSON\"] = 0===1;\n    tests[\"Values updated\"] = 0===1;\n} else {\n    var data = JSON.parse(responseBody);\n     \n    result = tv4.validateResult(data, schema)\n    tests[\"Valid JSON\"] = result.valid;\n    \n    //Test that new email is correct\n    tests[\"Values updated\"] = data.email === \"amccluskey@umass.edu\";\n}\n\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1461089020815,
			"name": "/users/:userid (authorized)",
			"description": "",
			"collectionId": "9d835673-13f6-dde1-ec99-9c5eda5be129",
			"responses": [],
			"rawModeData": "{\n  \"_id\": \"000000000000000000000001\",\n  \"email\": \"amccluskey@umass.edu\",\n  \"password\": \"Timmy1234\",\n  \"fullName\": \"Tim Richards\",\n  \"gender\": \"male\",\n  \"race\": \"White\",\n  \"hispanic\": false,\n  \"registered\": false,\n  \"age\": \"25-34\",\n  \"politicalAffiliation\": \"000000000000000000000002\",\n  \"location\": \"Amherst, MA\",\n  \"vote\": null,\n  \"emailSettings\": [\n    \"000000000000000000000001\",\n    \"000000000000000000000003\",\n    \"000000000000000000000004\",\n    \"000000000000000000000006\"\n  ]\n}"
		},
		{
			"id": "4720f823-630b-7c30-5e35-cc794e9ff9db",
			"headers": "Content-Type: application/json\n",
			"url": "{{url}}/users/newuser",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"tests": "//Verify response arrives in less than a second\ntests[\"Response time is less than 1 second\"] = responseTime < 1000;\n\n//Test response code\ntests[\"Status code is 400: Bad Request\"] = responseCode.code === 400;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460656069796,
			"name": "POST Missing Data",
			"description": "",
			"collectionId": "9d835673-13f6-dde1-ec99-9c5eda5be129",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"2117532m@student.gla.ac.uk\",\n    \"fullName\": \"Andrew McCluskey\",\n    \"location\": \"Glasgow, Scotland\"\n}"
		},
		{
			"id": "4eac7ccd-4908-c101-7ebb-652598bc553d",
			"headers": "Content-Type: application/json\n",
			"url": "{{url}}/chat/000000000000000000000001",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "raw",
			"tests": "//Verify response arrives in less than a second\ntests[\"Response time is less than 1 second\"] = responseTime < 1000;\n\n//Test response code\ntests[\"Status code is 200\"] = responseCode.code === 200;\n\n//Verify JSON keys\nvar schema = {\n\"type\": \"object\",\n\"properties\": {\n    \"active\": \"boolean\",\n    \"_id\": \"integer\",\n    \"fullName\": \"string\",\n    \"messages\": \"array\"\n},\n\"required\": [\"active\", \"_id\", \"fullName\", \"messages\"]\n};\n \nvar data = JSON.parse(responseBody);\n \nresult = tv4.validateResult(data, schema)\ntests[\"Valid JSON\"] = result.valid;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460392026759,
			"name": "/chat/:chatId",
			"description": "",
			"collectionId": "9d835673-13f6-dde1-ec99-9c5eda5be129",
			"responses": [],
			"rawModeData": "{\n  \"_id\": 1,\n  \"email\": \"amccluskey@umass.edu\",\n  \"password\": \"Timmy1234\",\n  \"fullName\": \"Tim Richards\",\n  \"gender\": \"male\",\n  \"race\": \"White\",\n  \"hispanic\": false,\n  \"registered\": false,\n  \"age\": \"25-34\",\n  \"politicalAffiliation\": 2,\n  \"location\": \"Amherst, MA\",\n  \"vote\": 0,\n  \"emailSettings\": [\n    1,\n    3,\n    4,\n    6\n  ]\n}"
		},
		{
			"id": "551947dd-8b26-9084-5b6b-f0519a83bb68",
			"headers": "Authorization: bearer eyJpZCI6IjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMSJ9\n",
			"url": "{{url}}/users/000000000000000000000001/emailsettings/000000000000000000000002",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "PUT",
			"data": null,
			"dataMode": "params",
			"tests": "//Verify response arrives in less than a second\ntests[\"Response time is less than 1 second\"] = responseTime < 1000;\n\n//Test response code\ntests[\"Status code is 200\"] = responseCode.code === 200;\n\n//Verify response array is numeric\nnumeric = true;\nfor (var i in data) {\n    if (isNaN(parseFloat(i)) && !(isFinite(i))) {\n        numeric = false;\n    }\n}\n\ntests[\"Response array was numeric\"] = numeric===true;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460392103031,
			"name": "/users/:userid/emailsettings/:candid (authorized)",
			"description": "",
			"collectionId": "9d835673-13f6-dde1-ec99-9c5eda5be129",
			"responses": []
		},
		{
			"id": "56c52355-5322-c2b5-b5df-a8a9a48500e1",
			"headers": "Content-Type: application/json\n",
			"url": "{{url}}/users/000000000000000000000004",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "raw",
			"tests": "//Verify response arrives in less than a second\ntests[\"Response time is less than 1 second\"] = responseTime < 1000;\n\n//Test response code\ntests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460665970656,
			"name": "DELETE Invalid Auth",
			"description": "",
			"collectionId": "9d835673-13f6-dde1-ec99-9c5eda5be129",
			"responses": [],
			"rawModeData": ""
		},
		{
			"id": "57c18544-77cd-541d-492f-ccfb6eb07417",
			"headers": "",
			"url": "{{url}}/users/000000000000000000000001/party",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"tests": "//Verify response arrives in less than a second\ntests[\"Response time is less than 1 second\"] = responseTime < 1000;\n\n//Test response code\ntests[\"Status code is 200\"] = responseCode.code === 200;\n\n//Verify party value is numeric\ntests[\"Response was a mongo id\"] = (responseBody.length === 26) && (responseBody[0] === '\"') && (responseBody[responseBody.length - 1] === '\"');",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460733680145,
			"name": "/users/:userId/party",
			"description": "",
			"collectionId": "9d835673-13f6-dde1-ec99-9c5eda5be129",
			"responses": []
		},
		{
			"id": "68fdb2fa-e647-f63f-aeb7-cf4061b731df",
			"headers": "",
			"url": "{{url}}/parties/000000000000000000000001",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"tests": "//Verify response arrives in less than a second\ntests[\"Response time is less than 1 second\"] = responseTime < 1000;\n\n//Test response code\ntests[\"Status code is 200\"] = responseCode.code === 200;\n\n//Verify JSON keys\nvar schema = {\n\"type\": \"object\",\n\"properties\": {\n    \"name\": \"string\",\n    \"color\": \"string\",\n    \"logo\": \"string\"\n},\n\"required\": [\"name\", \"color\", \"logo\"]\n};\n \nvar data = JSON.parse(responseBody);\n \nresult = tv4.validateResult(data, schema)\ntests[\"Valid JSON\"] = result.valid;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460733957560,
			"name": "/parties/:partyId",
			"description": "",
			"collectionId": "9d835673-13f6-dde1-ec99-9c5eda5be129",
			"responses": []
		},
		{
			"id": "6c1ba8a1-9140-436e-8798-fc6c8a77178b",
			"headers": "Content-Type: application/json\n",
			"url": "{{url}}/chat",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "raw",
			"tests": "//Verify response arrives in less than a second\ntests[\"Response time is less than 1 second\"] = responseTime < 1000;\n\n//Test response code\ntests[\"Status code is 200\"] = responseCode.code === 200;\n\n//Verify JSON keys\nvar schema = {\n\"type\": \"object\",\n\"properties\": {\n    \"active\": \"boolean\",\n    \"_id\": \"integer\",\n    \"fullName\": \"string\",\n    \"messages\": \"array\"\n},\n\"required\": [\"active\", \"_id\", \"fullName\", \"messages\"]\n};\n \nvar data = JSON.parse(responseBody);\n \nresult = tv4.validateResult(data[0], schema)\ntests[\"Valid JSON\"] = result.valid;",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1459957519132,
			"name": "/chat",
			"description": "",
			"collectionId": "9d835673-13f6-dde1-ec99-9c5eda5be129",
			"responses": [],
			"folder": "d6deff1b-260d-114d-8771-4674af08293c",
			"timestamp": null,
			"rawModeData": "{\n  \"_id\": 1,\n  \"email\": \"amccluskey@umass.edu\",\n  \"password\": \"Timmy1234\",\n  \"fullName\": \"Tim Richards\",\n  \"gender\": \"male\",\n  \"race\": \"White\",\n  \"hispanic\": false,\n  \"registered\": false,\n  \"age\": \"25-34\",\n  \"politicalAffiliation\": 2,\n  \"location\": \"Amherst, MA\",\n  \"vote\": 0,\n  \"emailSettings\": [\n    1,\n    3,\n    4,\n    6\n  ]\n}"
		},
		{
			"id": "7580ec68-a417-0125-6935-0715a3b7c185",
			"headers": "",
			"url": "{{url}}/resetdb",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": null,
			"dataMode": "params",
			"tests": "//Verify response arrives in less than a second\ntests[\"Response time is less than 1 second\"] = responseTime < 1000;\n\n//Test response code\ntests[\"Status code is 200\"] = responseCode.code === 200;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460733197251,
			"name": "Reset DB",
			"description": "",
			"collectionId": "9d835673-13f6-dde1-ec99-9c5eda5be129",
			"responses": []
		},
		{
			"id": "7ef21d56-17a2-45dc-3daa-14d954e1278f",
			"headers": "",
			"url": "{{url}}/users/000000000000000000000001/emailsettings/000000000000000000000002",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "PUT",
			"data": null,
			"dataMode": "params",
			"tests": "//Verify response arrives in less than a second\ntests[\"Response time is less than 1 second\"] = responseTime < 1000;\n\n//Test response code\ntests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460392110063,
			"name": "/users/:userid/emailsettings/:candid (unauthorized)",
			"description": "",
			"collectionId": "9d835673-13f6-dde1-ec99-9c5eda5be129",
			"responses": []
		},
		{
			"id": "8285760b-571f-dac7-da3d-9235c0088c34",
			"headers": "Authorization: bearer eyJpZCI6IjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMSJ9\n",
			"url": "{{url}}/users/000000000000000000000001/emailsettings/000000000000000000000002",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "DELETE",
			"data": null,
			"dataMode": "params",
			"tests": "//Verify response arrives in less than a second\ntests[\"Response time is less than 1 second\"] = responseTime < 1000;\n\n//Test response code\ntests[\"Status code is 200\"] = responseCode.code === 200;\n\n//Verify response array is numeric\nnumeric = true;\nfor (var i in data) {\n    if (isNaN(parseFloat(i)) && !(isFinite(i))) {\n        numeric = false;\n    }\n}\n\ntests[\"Response array was numeric\"] = numeric===true;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460392115903,
			"name": "/users/:userid/emailsettings/:candid (authorized)",
			"description": "",
			"collectionId": "9d835673-13f6-dde1-ec99-9c5eda5be129",
			"responses": []
		},
		{
			"id": "82e076fb-9f4c-70de-a34c-56e8c7d95f3f",
			"headers": "",
			"url": "{{url}}/users/000000000000000000000001",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"tests": "//Verify response arrives in less than a second\ntests[\"Response time is less than 1 second\"] = responseTime < 1000;\n\ntests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460392070568,
			"name": "/users/:userid (unauthorized)",
			"description": "",
			"collectionId": "9d835673-13f6-dde1-ec99-9c5eda5be129",
			"responses": []
		},
		{
			"id": "8f8ba44f-af27-d479-cb84-df06d04027a9",
			"headers": "Content-Type: application/json\nAuthorization: bearer eyJpZCI6IjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMSJ9\n",
			"url": "{{url}}/chat/000000000000000000000001/messages",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"tests": "//Verify response arrives in less than a second\ntests[\"Response time is less than 1 second\"] = responseTime < 1000;\n\n//Test response code\ntests[\"Status code is 201: Created\"] = responseCode.code === 201;\n\n\n\n//Verify JSON keys\nvar schema = {\n\"type\": \"object\",\n\"properties\": {\n    \"active\": \"boolean\",\n    \"_id\": \"integer\",\n    \"fullName\": \"string\",\n    \"messages\": \"array\"\n},\n\"required\": [\"active\", \"_id\", \"fullName\", \"messages\"]\n};\n\nif (responseBody === \"\"){\n    tests[\"Valid JSON\"] = 0===1;\n} else {\n    var data = JSON.parse(responseBody);\n     \n    result = tv4.validateResult(data, schema)\n    tests[\"Valid JSON\"] = result.valid;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1461038476767,
			"name": "/chat/:chatId/messages (Authorized)",
			"description": "",
			"collectionId": "9d835673-13f6-dde1-ec99-9c5eda5be129",
			"responses": [],
			"rawModeData": "{\n    \"author\": \"000000000000000000000001\",\n    \"contents\": \"This is a test message from postman.\"\n}"
		},
		{
			"id": "97a206a5-70dc-7c02-e8ec-845c1e09ad57",
			"headers": "",
			"url": "{{url}}/weeks",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"tests": "//Verify response arrives in less than a second\ntests[\"Response time is less than 1 second\"] = responseTime < 1000;\n\n//Test response code\ntests[\"Status code is 200\"] = responseCode.code === 200;\n\n//Verify JSON keys\nvar schema = {\n\"type\": \"object\",\n\"properties\": {\n    \"startDate\": \"string\",\n    \"ballotBox\": \"object\"\n},\n\"required\": [\"startDate\", \"ballotBox\"]\n};\n \nvar data = JSON.parse(responseBody);\n \nresult = tv4.validateResult(data[0], schema)\ntests[\"Valid JSON\"] = result.valid;",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1460317801037,
			"name": "/weeks",
			"description": "",
			"collectionId": "9d835673-13f6-dde1-ec99-9c5eda5be129",
			"responses": [],
			"folder": "926e2238-aedd-4827-a517-8bdfa91ebba3",
			"rawModeData": null,
			"descriptionFormat": null
		},
		{
			"id": "984d4b85-fb23-9137-1b04-a1425f38d05f",
			"headers": "Authorization: bearer eyJpZCI6IjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMSJ9\n",
			"url": "{{url}}/users/000000000000000000000001/emailsettings",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"tests": "//Verify response arrives in less than a second\ntests[\"Response time is less than 1 second\"] = responseTime < 1000;\n\n//Test response code\ntests[\"Status code is 200\"] = responseCode.code === 200;\n\n//Verify response array is numeric\nnumeric = true;\nfor (var i in data) {\n    if (isNaN(parseFloat(i)) && !(isFinite(i))) {\n        numeric = false;\n    }\n}\n\ntests[\"Response array was numeric\"] = numeric===true;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460392090551,
			"name": "/users/:userid/emailsettings (authorized)",
			"description": "",
			"collectionId": "9d835673-13f6-dde1-ec99-9c5eda5be129",
			"responses": []
		},
		{
			"id": "99d20753-6fd0-a5f2-50b5-3a2ef1f344e5",
			"headers": "Content-Type: application/json\n",
			"url": "{{url}}/users/000000000000000000000001",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"tests": "//Verify response arrives in less than a second\ntests[\"Response time is less than 1 second\"] = responseTime < 1000;\n\ntests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1461089028630,
			"name": "/users/:userid (unauthorized)",
			"description": "",
			"collectionId": "9d835673-13f6-dde1-ec99-9c5eda5be129",
			"responses": [],
			"rawModeData": "{\n  \"_id\": \"000000000000000000000001\",\n  \"email\": \"amccluskey@umass.edu\",\n  \"password\": \"Timmy1234\",\n  \"fullName\": \"Tim Richards\",\n  \"gender\": \"male\",\n  \"race\": \"White\",\n  \"hispanic\": false,\n  \"registered\": false,\n  \"age\": \"25-34\",\n  \"politicalAffiliation\": \"000000000000000000000002\",\n  \"location\": \"Amherst, MA\",\n  \"vote\": null,\n  \"emailSettings\": [\n    \"000000000000000000000001\",\n    \"000000000000000000000003\",\n    \"000000000000000000000004\",\n    \"000000000000000000000006\"\n  ]\n}"
		},
		{
			"id": "af140b77-b1e3-947f-92cc-a89d92991f4a",
			"headers": "",
			"url": "{{url}}/candidates/id/000000000000000000000001",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"tests": "//Verify response arrives in less than a second\ntests[\"Response time is less than 1 second\"] = responseTime < 1000;\n\n//Test response code\ntests[\"Status code is 200\"] = responseCode.code === 200;\n\n//Verify JSON keys\nvar schema = {\n\"type\": \"object\",\n\"properties\": {\n\"_id\": \"integer\",\n\"headImage\": \"string\",\n\"logoImage\": \"string\",\n\"fullName\": \"string\",\n\"party\": \"integer\",\n\"cssType\": \"string\",\n\"description\": \"string\",\n\"twitterHashtag\": \"string\",\n\"twitterID\": \"string\",\n\"campaignWebsite\": \"string\",\n\"wikipedia\" : \"string\",\n\"age\": \"string\",\n\"quote\": \"string\"\n},\n\"required\": [\"_id\", \"headImage\", \"logoImage\", \"fullName\", \"party\", \"cssType\", \"description\", \"twitterHashtag\", \"twitterID\", \"campaignWebsite\", \"wikipedia\", \"age\", \"quote\"]\n};\n \nvar data = JSON.parse(responseBody);\n \nresult = tv4.validateResult(data, schema)\ntests[\"Valid JSON\"] = result.valid;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460392018321,
			"name": "/candidates/id/:candId",
			"description": "",
			"collectionId": "9d835673-13f6-dde1-ec99-9c5eda5be129",
			"responses": []
		},
		{
			"id": "b8b6afc1-0982-67df-af25-3b96b0dedecf",
			"headers": "",
			"url": "{{url}}/events/000000000000000000000001",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"tests": "//Verify response arrives in less than a second\ntests[\"Response time is less than 1 second\"] = responseTime < 1000;\n\n//Test response code\ntests[\"Status code is 200\"] = responseCode.code === 200;\n\n//Verify JSON keys\nvar schema = {\n\"type\": \"object\",\n\"properties\": {\n    \"date\": \"string\",\n    \"name\": \"string\",\n    \"location\": \"string\",\n    \"summary\": \"string\",\n    \"party\": \"string\"\n},\n\"required\": [\"date\", \"name\", \"location\", \"summary\", \"party\"]\n};\n \nvar data = JSON.parse(responseBody);\n \nresult = tv4.validateResult(data[0], schema)\ntests[\"Valid JSON\"] = result.valid;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460392048976,
			"name": "/events/:page",
			"description": "",
			"collectionId": "9d835673-13f6-dde1-ec99-9c5eda5be129",
			"responses": []
		},
		{
			"id": "ca050838-22ec-bd68-106c-8dc6d8ef2f2e",
			"headers": "",
			"url": "{{url}}/users/race/gender",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"tests": "//Verify response arrives in less than a second\ntests[\"Response time is less than 1 second\"] = responseTime < 1000;\n\n//Test response code\ntests[\"Status code is 200\"] = responseCode.code === 200;\n\n//Verify JSON keys\nvar schema = {\n\"type\": \"object\",\n\"properties\": {\n    \"race\": \"string\",\n    \"gender\": \"string\"\n},\n\"required\": [\"race\", \"gender\"]\n};\n \nvar data = JSON.parse(responseBody);\n \nresult = tv4.validateResult(data[0], schema)\ntests[\"Valid JSON\"] = result.valid;",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1459957550892,
			"name": "/users/race/gender",
			"description": "",
			"collectionId": "9d835673-13f6-dde1-ec99-9c5eda5be129",
			"responses": [],
			"folder": "1971d5d7-4be0-42c2-d30b-849c7bf46049",
			"timestamp": null
		},
		{
			"id": "cf5f3438-53da-4e96-107d-1e660e364c41",
			"headers": "",
			"url": "{{url}}/users/000000000000000000000001/fullName",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"tests": "//Verify response arrives in less than a second\ntests[\"Response time is less than 1 second\"] = responseTime < 1000;\n\n//Test response code\ntests[\"Status code is 200\"] = responseCode.code === 200;\n\n//Verify name is correct\ntests[\"Correct name in response\"] = responseBody === \"Tim Richards\";",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460733361831,
			"name": "/users/:userId/fullName",
			"description": "",
			"collectionId": "9d835673-13f6-dde1-ec99-9c5eda5be129",
			"responses": []
		},
		{
			"id": "da5de36c-903c-471d-1b7a-ee0f205b37ac",
			"headers": "Authorization: bearer eyJpZCI6IjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMSJ9\n",
			"url": "{{url}}/users/000000000000000000000001",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"tests": "//Verify response arrives in less than a second\ntests[\"Response time is less than 1 second\"] = responseTime < 1000;\n\n//Test response code\ntests[\"Status code is 200\"] = responseCode.code === 200;\n\n//Verify JSON keys\nvar schema = {\n\"type\": \"object\",\n\"properties\": {\n    \"_id\": \"integer\",\n    \"email\": \"string\",\n    \"password\": \"string\",\n    \"fullName\": \"string\",\n    \"gender\": \"string\",\n    \"hispanic\": \"boolean\",\n    \"registered\": \"boolean\",\n    \"age\": \" string\",\n    \"politicalAffiliation\": \"integer\",\n    \"location\": \"string\",\n    \"vote\": \"integer\",\n    \"emailSettings\": \"array\"\n},\n\"required\": [\"_id\", \"email\", \"password\", \"fullName\", \"gender\", \"hispanic\", \"registered\", \"age\", \"politicalAffiliation\", \"location\", \"vote\", \"emailSettings\"]\n};\n \nif (responseBody === \"\"){\n    tests[\"Valid JSON\"] = 0===1;\n} else {\n    var data = JSON.parse(responseBody);\n     \n    result = tv4.validateResult(data, schema)\n    tests[\"Valid JSON\"] = result.valid;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460605330919,
			"name": "/users/:userid (authorized)",
			"description": "",
			"collectionId": "9d835673-13f6-dde1-ec99-9c5eda5be129",
			"responses": []
		},
		{
			"id": "e0153d09-ff23-844d-3e15-ae46dc74a20e",
			"headers": "",
			"url": "{{url}}/candidates/party/000000000000000000000001",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"tests": "//Verify response arrives in less than a second\ntests[\"Response time is less than 1 second\"] = responseTime < 1000;\n\n//Test response code\ntests[\"Status code is 200\"] = responseCode.code === 200;\n\n//Verify JSON keys\nvar schema = {\n\"type\": \"object\",\n\"properties\": {\n\"_id\": \"integer\",\n\"headImage\": \"string\",\n\"logoImage\": \"string\",\n\"fullName\": \"string\",\n\"party\": \"integer\",\n\"cssType\": \"string\",\n\"description\": \"string\",\n\"twitterHashtag\": \"string\",\n\"twitterID\": \"string\",\n\"campaignWebsite\": \"string\",\n\"wikipedia\" : \"string\",\n\"age\": \"string\",\n\"quote\": \"string\"\n},\n\"required\": [\"_id\", \"headImage\", \"logoImage\", \"fullName\", \"party\", \"cssType\", \"description\", \"twitterHashtag\", \"twitterID\", \"campaignWebsite\", \"wikipedia\", \"age\", \"quote\"]\n};\n \nvar data = JSON.parse(responseBody);\n \nresult = tv4.validateResult(data[0], schema)\ntests[\"Valid JSON\"] = result.valid;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460392022144,
			"name": "/candidates/party/:partyid",
			"description": "",
			"collectionId": "9d835673-13f6-dde1-ec99-9c5eda5be129",
			"responses": []
		},
		{
			"id": "e153c425-112c-46c4-77fc-c26be0dec931",
			"headers": "",
			"url": "{{url}}/users/000000000000000000000001/emailsettings/000000000000000000000002",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "DELETE",
			"data": null,
			"dataMode": "params",
			"tests": "//Verify response arrives in less than a second\ntests[\"Response time is less than 1 second\"] = responseTime < 1000;\n\n//Test response code\ntests[\"Status code is 401: Unauthorized\"] = responseCode.code === 401;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460392124511,
			"name": "/users/:userid/emailsettings/:candid (unauthorized)",
			"description": "",
			"collectionId": "9d835673-13f6-dde1-ec99-9c5eda5be129",
			"responses": []
		},
		{
			"id": "e8004e92-4701-943a-51fa-113d793bebf8",
			"headers": "",
			"url": "{{url}}/events",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"tests": "//Verify response arrives in less than a second\ntests[\"Response time is less than 1 second\"] = responseTime < 1000;\n\n//Test response code\ntests[\"Status code is 200\"] = responseCode.code === 200;\n\n//Verify JSON keys\nvar schema = {\n\"type\": \"object\",\n\"properties\": {\n    \"date\": \"string\",\n    \"name\": \"string\",\n    \"location\": \"string\",\n    \"summary\": \"string\",\n    \"party\": \"string\"\n},\n\"required\": [\"date\", \"name\", \"location\", \"summary\", \"party\"]\n};\n \nvar data = JSON.parse(responseBody);\n \nresult = tv4.validateResult(data[0], schema)\ntests[\"Valid JSON\"] = result.valid;",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1459957536404,
			"name": "/events",
			"description": "",
			"collectionId": "9d835673-13f6-dde1-ec99-9c5eda5be129",
			"responses": [],
			"folder": "a141dc98-5571-ccd9-43fc-221ec99fed33",
			"timestamp": null
		},
		{
			"id": "ef7d56cc-c988-9978-6fda-f8a5c2802b8b",
			"headers": "Content-Type: application/json\n",
			"url": "{{url}}/users/newuser",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"tests": "//Verify response arrives in less than a second\ntests[\"Response time is less than 1 second\"] = responseTime < 1000;\n\n//Test response code\ntests[\"Status code is 409: Conflict\"] = responseCode.code === 409;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1461021019643,
			"name": "POST Duplicate Email",
			"description": "",
			"collectionId": "9d835673-13f6-dde1-ec99-9c5eda5be129",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"2117532m@student.gla.ac.uk\",\n    \"password\": \"mycatismax\",\n    \"fullName\": \"Andrew McCluskey\",\n    \"location\": \"Glasgow, Scotland\"\n}"
		},
		{
			"id": "f36c493f-7fd5-186b-f131-e7cdfe9561ee",
			"headers": "",
			"url": "{{url}}/candidates",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"tests": "//Verify response arrives in less than a second\ntests[\"Response time is less than 1 second\"] = responseTime < 1000;\n\n//Test response code\ntests[\"Status code is 200\"] = responseCode.code === 200;\n\n//Verify JSON keys\nvar schema = {\n\"type\": \"object\",\n\"properties\": {\n\"_id\": \"integer\",\n\"headImage\": \"string\",\n\"logoImage\": \"string\",\n\"fullName\": \"string\",\n\"party\": \"integer\",\n\"cssType\": \"string\",\n\"description\": \"string\",\n\"twitterHashtag\": \"string\",\n\"twitterID\": \"string\",\n\"campaignWebsite\": \"string\",\n\"wikipedia\" : \"string\",\n\"age\": \"string\",\n\"quote\": \"string\"\n},\n\"required\": [\"_id\", \"headImage\", \"logoImage\", \"fullName\", \"party\", \"cssType\", \"description\", \"twitterHashtag\", \"twitterID\", \"campaignWebsite\", \"wikipedia\", \"age\", \"quote\"]\n};\n \nvar data = JSON.parse(responseBody);\n \nresult = tv4.validateResult(data[0], schema)\ntests[\"Valid JSON\"] = result.valid;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1460388773855,
			"name": "/candidates",
			"description": "",
			"collectionId": "9d835673-13f6-dde1-ec99-9c5eda5be129",
			"responses": []
		}
	]
}
